# Generated by Django 4.2.16 on 2024-11-08 00:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('assinaturas', '0001_initial'),
        ('pacientes', '__first__'),
        ('profissionais', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Prontuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('data_atendimento', models.DateTimeField(verbose_name='Data do Atendimento')),
                ('queixa_principal', models.TextField(blank=True, verbose_name='Queixa Principal')),
                ('historico_doenca_atual', models.TextField(blank=True, verbose_name='Histórico da Doença Atual')),
                ('antecedentes_pessoais', models.TextField(blank=True, verbose_name='Antecedentes Pessoais')),
                ('exame_fisico_cabeca_pescoco', models.TextField(blank=True, verbose_name='Exame Físico - Cabeça e Pescoço')),
                ('exame_fisico_torax', models.TextField(blank=True, verbose_name='Exame Físico - Tórax')),
                ('exame_fisico_abdomen', models.TextField(blank=True, verbose_name='Exame Físico - Abdômen')),
                ('exame_fisico_membros', models.TextField(blank=True, verbose_name='Exame Físico - Membros Superiores e Inferiores')),
                ('hipotese_diagnostica', models.TextField(blank=True, verbose_name='Hipótese Diagnóstica')),
                ('conduta', models.TextField(blank=True, verbose_name='Conduta/Plano')),
                ('prescricao', models.TextField(blank=True, verbose_name='Prescrição Médica')),
                ('tratamentos_previos', models.TextField(blank=True, verbose_name='Tratamentos Prévio(s)')),
                ('diagnostico_final', models.CharField(blank=True, max_length=255, verbose_name='Diagnóstico Final')),
                ('cid_10', models.CharField(blank=True, max_length=10, verbose_name='CID-10')),
                ('anotacoes_profissionais', models.TextField(blank=True, verbose_name='Anotações de Outros Profissionais')),
                ('encaminhamentos', models.TextField(blank=True, verbose_name='Encaminhamentos')),
                ('referencias_especialidades', models.TextField(blank=True, verbose_name='Referências para Especialidades')),
                ('consentimento_informado', models.BooleanField(default=False, verbose_name='Consentimento Informado Assinado')),
                ('historico_familiar', models.TextField(blank=True, verbose_name='Histórico Familiar')),
                ('risco_genetico', models.TextField(blank=True, verbose_name='Risco Genético Identificado')),
                ('dados_psicossociais', models.TextField(blank=True, verbose_name='Dados Psicológicos e Sociais')),
                ('estado_emocional', models.TextField(blank=True, verbose_name='Estado Emocional')),
                ('transtornos_identificados', models.TextField(blank=True, verbose_name='Transtornos Identificados')),
                ('medicacoes_psiquiatricas', models.TextField(blank=True, verbose_name='Medicações Psiquiátricas')),
                ('tabagismo', models.BooleanField(default=False, verbose_name='Tabagismo')),
                ('etilismo', models.BooleanField(default=False, verbose_name='Etilismo')),
                ('uso_drogas', models.BooleanField(default=False, verbose_name='Uso de Drogas')),
                ('atividade_fisica', models.CharField(blank=True, max_length=255, verbose_name='Atividade Física')),
                ('alimentacao', models.CharField(blank=True, max_length=255, verbose_name='Alimentação')),
                ('qualidade_sono', models.CharField(blank=True, max_length=255, verbose_name='Qualidade do Sono')),
                ('ocupacao', models.CharField(blank=True, max_length=255, verbose_name='Ocupação')),
                ('nivel_estresse', models.CharField(blank=True, max_length=255, verbose_name='Nível de Estresse')),
                ('medicacoes_nao_prescritas', models.TextField(blank=True, verbose_name='Medicações Não Prescritas')),
                ('historico_cirurgias', models.TextField(blank=True, verbose_name='Histórico de Cirurgias')),
                ('historico_internacoes', models.TextField(blank=True, verbose_name='Histórico de Internações')),
                ('imunizacoes', models.TextField(blank=True, verbose_name='Histórico de Imunizações')),
                ('estratificacao_risco', models.CharField(blank=True, max_length=255, verbose_name='Estratificação de Risco')),
                ('risco_quedas', models.CharField(blank=True, max_length=255, verbose_name='Risco de Quedas')),
                ('motivo_atendimento', models.CharField(blank=True, max_length=255, verbose_name='Motivo do Atendimento')),
                ('diabetes_hemoglobina_glicada', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Hemoglobina Glicada (%)')),
                ('funcao_renal_taxa_filtracao', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Taxa de Filtração Glomerular (mL/min)')),
                ('imc', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Índice de Massa Corporal (IMC)')),
                ('percentual_gordura_corporal', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Percentual de Gordura Corporal (%)')),
                ('dieta_recomendada', models.TextField(blank=True, verbose_name='Dieta Recomendada')),
                ('plano_saude', models.CharField(blank=True, max_length=255, verbose_name='Plano de Saúde')),
                ('numero_plano_saude', models.CharField(blank=True, max_length=255, verbose_name='Número do Plano de Saúde')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prontuarios_criados', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prontuarios', to='pacientes.paciente')),
                ('profissional_responsavel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exames_solicitados_complementar', to='profissionais.profissional')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prontuarios_atualizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prontuário',
                'verbose_name_plural': 'Prontuários',
            },
        ),
        migrations.CreateModel(
            name='ProcedimentoRealizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_procedimento', models.CharField(max_length=255, verbose_name='Tipo de Procedimento')),
                ('data_procedimento', models.DateTimeField(auto_now_add=True, verbose_name='Data do Procedimento')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('consentimento_associado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedimentos_consentidos', to='assinaturas.assinatura')),
                ('profissional_responsavel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedimentos_realizados', to='profissionais.profissional')),
                ('prontuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedimentos_realizados', to='prontuarios.prontuario')),
            ],
            options={
                'verbose_name': 'Procedimento Realizado',
                'verbose_name_plural': 'Procedimentos Realizados',
            },
        ),
        migrations.CreateModel(
            name='HistoricoMedicamentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicamento', models.CharField(max_length=255, verbose_name='Medicamento')),
                ('dosagem', models.CharField(max_length=255, verbose_name='Dosagem')),
                ('frequencia', models.CharField(max_length=255, verbose_name='Frequência')),
                ('duracao', models.CharField(max_length=255, verbose_name='Duração')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('data_prescricao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Prescrição')),
                ('prescrito_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='profissionais.profissional')),
                ('prontuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_medicamentos', to='prontuarios.prontuario')),
            ],
            options={
                'verbose_name': 'Histórico de Medicamento',
                'verbose_name_plural': 'Histórico de Medicamentos',
            },
        ),
        migrations.CreateModel(
            name='HistoricoAcessosProntuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_acesso', models.DateTimeField(auto_now_add=True, verbose_name='Data do Acesso')),
                ('tipo_acesso', models.CharField(choices=[('visualizacao', 'Visualização'), ('alteracao', 'Alteração')], max_length=50, verbose_name='Tipo de Acesso')),
                ('prontuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_acessos', to='prontuarios.prontuario')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Acesso ao Prontuário',
                'verbose_name_plural': 'Histórico de Acessos ao Prontuário',
            },
        ),
        migrations.CreateModel(
            name='ExameComplementar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_exame', models.CharField(max_length=255, verbose_name='Tipo de Exame')),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Solicitação')),
                ('data_resultado', models.DateTimeField(blank=True, null=True, verbose_name='Data do Resultado')),
                ('resultado', models.TextField(blank=True, verbose_name='Resultado do Exame')),
                ('imagem_associada', models.ImageField(blank=True, null=True, upload_to='exames/imagens/', verbose_name='Imagem Associada')),
                ('profissional_responsavel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exames_solicitados', to='profissionais.profissional')),
                ('prontuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exames_complementares', to='prontuarios.prontuario')),
            ],
            options={
                'verbose_name': 'Exame Complementar',
                'verbose_name_plural': 'Exames Complementares',
            },
        ),
        migrations.CreateModel(
            name='EvolucaoClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_evolucao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Evolução')),
                ('descricao', models.TextField(verbose_name='Descrição da Evolução')),
                ('profissional_responsavel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='profissionais.profissional')),
                ('prontuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evolucoes_clinicas', to='prontuarios.prontuario')),
            ],
            options={
                'verbose_name': 'Evolução Clínica',
                'verbose_name_plural': 'Evoluções Clínicas',
            },
        ),
        migrations.CreateModel(
            name='DadosVitais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_registro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Registro')),
                ('pressao_arterial', models.CharField(blank=True, max_length=50, verbose_name='Pressão Arterial')),
                ('frequencia_cardiaca', models.CharField(blank=True, max_length=50, verbose_name='Frequência Cardíaca')),
                ('temperatura', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temperatura Corporal (°C)')),
                ('saturacao_oxigenio', models.CharField(blank=True, max_length=50, verbose_name='Saturação de Oxigênio (%)')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso (kg)')),
                ('altura', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Altura (m)')),
                ('glicemia', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Glicemia (mg/dL)')),
                ('colesterol_total', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Colesterol Total (mg/dL)')),
                ('triglicerides', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Triglicérides (mg/dL)')),
                ('prontuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dados_vitais', to='prontuarios.prontuario')),
            ],
            options={
                'verbose_name': 'Dados Vitais',
                'verbose_name_plural': 'Dados Vitais',
            },
        ),
    ]
